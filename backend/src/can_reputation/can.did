type DecisionTopicSet = variant {
  It : nat32;
  Or : record { DecisionTopicSet; DecisionTopicSet };
  And : record { DecisionTopicSet; DecisionTopicSet };
  Not : DecisionTopicSet;
};
type DelegationTreeNode = record {
  id : principal;
  topicset : DecisionTopicSet;
  followers : vec DelegationTreeNode;
};
type GetBalanceRequest = record { ids : vec principal };
type GetBalanceResponse = record { entries : vec RepBalanceEntry };
type GetRepProofRequest = record {
  liquid_democracy_proof : LiquidDemocracyProof;
};
type GetRepProofResponse = record {
  marker : text;
  proof : ReputationProofBody;
};
type GetTotalSupplyResponse = record { total_supply : nat };
type LiquidDemocracyProof = record {
  cert_raw : blob;
  body : opt DelegationTreeNode;
};
type MintRepRequest = record { entries : vec record { principal; nat } };
type RepBalanceEntry = record { updated_at : nat64; balance : nat };
type ReputationDelegationTreeNode = record {
  id : principal;
  reputation : nat;
  topicset : DecisionTopicSet;
  followers : vec ReputationDelegationTreeNode;
};
type ReputationProofBody = record {
  reputation_delegation_tree : ReputationDelegationTreeNode;
  reputation_total_supply : nat;
};
service : () -> {
  reputation__get_balance : (GetBalanceRequest) -> (GetBalanceResponse) query;
  reputation__get_reputation_proof : (GetRepProofRequest) -> (
      GetRepProofResponse,
    );
  reputation__get_total_supply : (record {}) -> (GetTotalSupplyResponse) query;
  reputation__init_once : () -> ();
  reputation__mint : (MintRepRequest) -> (record {});
}
